name: Nightly Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin]
    steps:
      - uses: actions/checkout@v4

      # Install latest nightly Rust
      - name: Install Rust (nightly)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.target }}

      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TERM_COLOR: always

      - name: Archive Binary
        shell: bash
        run: |
          BIN_NAME=your_binary_name  # Replace with your binary name
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            EXT=".exe"
            ARCHIVE="$BIN_NAME-${{ matrix.target }}.zip"
            zip -j $ARCHIVE target/${{ matrix.target }}/release/$BIN_NAME$EXT
          else
            EXT=""
            ARCHIVE="$BIN_NAME-${{ matrix.target }}.tar.gz"
            tar czf $ARCHIVE -C target/${{ matrix.target }}/release $BIN_NAME
          fi
          echo "ASSET_PATH=$ARCHIVE" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ env.ASSET_PATH }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Nightly Build: ${{ github.ref_name }}"
          body: |
            Automated nightly release
            Toolchain: $(rustc -V)
            Build date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
